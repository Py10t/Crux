#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Aug 10, 2017 10:54:21 PM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import Crux_support

def vp_start_gui():
    '''Startpunkt wenn dies die main routine ist'''
    global val, w, root
    root = Tk()
    top = Crux (root)
    Crux_support.init(root, top)
    root.mainloop()

w = None
'''def create_Crux(root, *args, **kwargs):
    #Startpunkt falls importiert und nicht main
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Crux (w)
    Crux_support.init(w, top, *args, **kwargs)
    return (w, top)'''

def destroy_Crux():
    global w
    w.destroy()
    w = None


class Crux:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 

        top.geometry("800x600+834+103")
        top.title("Crux")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.rframe = Frame(top)
        self.rframe.place(relx=0.25, rely=0.08, relheight=0.83, relwidth=0.38)
        self.rframe.configure(relief=GROOVE)
        self.rframe.configure(borderwidth="2")
        self.rframe.configure(relief=GROOVE)
        self.rframe.configure(background="#d9d9d9")
        self.rframe.configure(highlightbackground="#d9d9d9")
        self.rframe.configure(highlightcolor="black")
        self.rframe.configure(width=185)

        self.tmenu = Frame(top)
        self.tmenu.place(relx=0.0, rely=0.0, relheight=0.08, relwidth=1.0)
        self.tmenu.configure(relief=GROOVE)
        self.tmenu.configure(borderwidth="2")
        self.tmenu.configure(relief=GROOVE)
        self.tmenu.configure(background="#d9d9d9")
        self.tmenu.configure(highlightbackground="#d9d9d9")
        self.tmenu.configure(highlightcolor="black")
        self.tmenu.configure(width=795)

        self.exitbutton = Button(self.tmenu)
        self.exitbutton.place(relx=0.94, rely=0.0, height=48, width=48)
        self.exitbutton.configure(activebackground="#d9d9d9")
        self.exitbutton.configure(activeforeground="#000000")
        self.exitbutton.configure(background="#d9d9d9")
        self.exitbutton.configure(disabledforeground="#a3a3a3")
        self.exitbutton.configure(foreground="#000000")
        self.exitbutton.configure(highlightbackground="#d9d9d9")
        self.exitbutton.configure(highlightcolor="black")
        self.exitbutton.configure(pady="0")
        self.exitbutton.configure(text='''Exit''')
        #Exit terminiert das Programm 'root.destroy' funzt auch
        self.exitbutton.configure(command=Crux_support.destroy_window)

        self.newbutton = Button(self.tmenu)
        self.newbutton.place(relx=0.0, rely=0.04, height=48, width=48)
        self.newbutton.configure(activebackground="#d9d9d9")
        self.newbutton.configure(activeforeground="#000000")
        self.newbutton.configure(background="#d9d9d9")
        self.newbutton.configure(disabledforeground="#a3a3a3")
        self.newbutton.configure(foreground="#000000")
        self.newbutton.configure(highlightbackground="#d9d9d9")
        self.newbutton.configure(highlightcolor="black")
        self.newbutton.configure(pady="0")
        self.newbutton.configure(text='''Neu''')
        #Lambda function liest "eingabe1" aus und gibt es an "textfeld"
        self.newbutton.bind('<Button-1>',lambda e:self.textfeld.configure(text=(self.eingabe1.get())))

        self.bmenu = Frame(top)
        self.bmenu.place(relx=0.0, rely=0.92, relheight=0.08, relwidth=1.0)
        self.bmenu.configure(relief=GROOVE)
        self.bmenu.configure(borderwidth="2")
        self.bmenu.configure(relief=GROOVE)
        self.bmenu.configure(background="#d9d9d9")
        self.bmenu.configure(highlightbackground="#d9d9d9")
        self.bmenu.configure(highlightcolor="black")
        self.bmenu.configure(width=795)

        self.mainframe = Frame(top)
        self.mainframe.place(relx=0.0, rely=0.08, relheight=0.83, relwidth=0.63)
        self.mainframe.configure(relief=GROOVE)
        self.mainframe.configure(borderwidth="2")
        self.mainframe.configure(relief=GROOVE)
        self.mainframe.configure(background="#d9d9d9")
        self.mainframe.configure(highlightbackground="#d9d9d9")
        self.mainframe.configure(highlightcolor="black")
        self.mainframe.configure(width=125)

        self.eingabe1 = Entry(self.mainframe)
        self.eingabe1.place(relx=0.36, rely=0.2, relheight=0.04, relwidth=0.33)
        self.eingabe1.configure(background="white")
        self.eingabe1.configure(disabledforeground="#a3a3a3")
        self.eingabe1.configure(font="TkFixedFont")
        self.eingabe1.configure(foreground="#000000")
        self.eingabe1.configure(insertbackground="black")

        self.textfeld = Label(top)
        self.textfeld.place(relx=0.74, rely=0.25, height=81, width=114)
        self.textfeld.configure(background="#d9d9d9")
        self.textfeld.configure(disabledforeground="#a3a3a3")
        self.textfeld.configure(foreground="#000000")
        self.textfeld.configure(text='''Label''')
        self.textfeld.configure(width=114)






if __name__ == '__main__':
    vp_start_gui()



